#BlueJ class context
comment0.target=MyDodo
comment0.text=\r\n\r\n\ @author\ Sjaak\ Smetsers\ &\ Renske\ Smetsers-Weeda\r\n\ @version\ 3.0\ --\ 20-01-2017\r\n
comment1.params=
comment1.target=MyDodo()
comment10.params=distance
comment10.target=void\ jump(int)
comment10.text=\r\n\ Move\ given\ number\ of\ cells\ forward\ in\ the\ current\ direction.\r\n\ \r\n\ <p>\ Initial\:\ \ \ \r\n\ <p>\ Final\:\ \ \r\n\ \r\n\ @param\ \ \ int\ distance\:\ the\ number\ of\ steps\ made\r\n
comment11.params=
comment11.target=void\ walkToWorldEdge()
comment11.text=\r\n\ Walks\ to\ edge\ of\ the\ world\ printing\ the\ coordinates\ at\ each\ step\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ on\ West\ side\ of\ world\ facing\ East.\r\n\ <p>\ Final\:\ \ \ Dodo\ is\ on\ East\ side\ of\ world\ facing\ East.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ Coordinates\ of\ each\ cell\ printed\ in\ the\ console.\r\n
comment12.params=
comment12.target=void\ pickUpGrainWhenWalking()
comment12.text=\r\n\ Mimi\ will\ walk\ to\ the\ world\ edge.\ On\ her\ way\ she\ will\ pick\ up\ all\ the\ grain\ that\ she\ ecounter\r\n
comment13.params=
comment13.target=Egg\ getNearestEgg()
comment13.text=\r\n\ This\ function\ gets\ the\ information\ of\ the\ nearest\ egg\r\n
comment14.params=
comment14.target=Egg\ getValuableAEgg()
comment14.text=\r\n\ This\ function\ gets\ the\ highest\ value\ of\ egg\ in\ the\ map\r\n
comment15.params=
comment15.target=int\ getEggValue()
comment15.text=\r\n\ This\ function\ gets\ the\ value\ of\ the\ nearest\ egg\r\n
comment16.params=
comment16.target=void\ goToValueableEgg()
comment16.text=\r\n\ This\ function\ goes\ to\ the\ most\ valuable\ egg\r\n
comment17.params=
comment17.target=void\ goToNearestEgg()
comment17.text=\r\n\ This\ function\ goes\ to\ the\ nearest\ egg\r\n
comment18.params=
comment18.target=void\ layEggInNestWhenWalking()
comment18.text=\r\n\ Mimi\ will\ walk\ to\ the\ world\ edge.\ On\ her\ way\ she\ will\ lay\ a\ egg\ in\ every\ nest\ that\ she\ ecounter\r\n
comment19.params=
comment19.target=void\ goToEgg()
comment19.text=\r\n\ Mimi\ will\ walk\ in\ a\ row\ nonstop\ until\ stopping\ on\ a\ egg\r\n
comment2.params=
comment2.target=void\ act()
comment20.params=
comment20.target=void\ climbOverFence()
comment20.text=\r\n\ Mimi\ will\ clim\ over\ the\ fence\ ahead\ of\ her\r\n
comment21.params=
comment21.target=void\ stepOneBack()
comment21.text=\r\n\ Mimi\ will\ walk\ 1\ step\ back\r\n
comment22.params=
comment22.target=boolean\ grainAhead()
comment22.text=\r\n\ Mimi\ will\ detect\ if\ theres\ a\ grain\ ahead\ of\ her\r\n
comment23.params=
comment23.target=void\ goBackRowFaceBack()
comment23.text=\r\n\ Mimi\ will\ walk\ back\ to\ the\ world\ edge\r\n
comment24.params=
comment24.target=void\ walkAroundFence()
comment24.text=\r\n\ Mimi\ will\ walk\ around\ a\ fence\ depending\ on\ her\ direction\ she\ will\ walk\ clockwise\ around\ the\ fence\ or\ anti\ clockwise\r\n
comment25.params=
comment25.target=void\ walkAroundFenceClockWise()
comment25.text=\r\n\ Mimi\ will\ walk\ around\ a\ fence\ clockwise\r\n
comment26.params=
comment26.target=void\ walkAroundFenceAntiClockWise()
comment26.text=\r\n\ Mimi\ will\ walk\ around\ a\ fence\ anticlockwise\r\n
comment27.params=
comment27.target=boolean\ canLayEgg()
comment27.text=\r\n\ Test\ if\ Dodo\ can\ lay\ an\ egg.\r\n\ \ \ \ \ \ \ \ \ \ (there\ is\ not\ already\ an\ egg\ in\ the\ cell)\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <p>\ Final\:\ \ \ Same\ as\ initial\ situation\r\n\ \r\n\ @return\ boolean\ true\ if\ Dodo\ can\ lay\ an\ egg\ (no\ egg\ there)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ Dodo\ can't\ lay\ an\ egg\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (already\ an\ egg\ in\ the\ cell)\r\n
comment28.params=
comment28.target=void\ followEggTrail()
comment28.text=\r\n\ Mimi\ will\ walk\ and\ follow\ a\ train\ of\ egg\ stopping\ until\ she\ steps\ onto\ a\ nest\r\n
comment29.params=
comment29.target=void\ solveVerySimpleMaze()
comment29.text=\r\n\ Mimi\ will\ solve\ a\ simple\ maze.\ She\ will\ walk\ clockwise\ or\ anticlockwise\ depending\ on\ her\ starting\ direction\r\n
comment3.params=
comment3.target=void\ move()
comment3.text=\r\n\ Move\ one\ cell\ forward\ in\ the\ current\ direction.\r\n\ \r\n\ <P>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <P>\ Final\:\ If\ possible,\ Dodo\ has\ moved\ forward\ one\ cell\r\n\r\n
comment30.params=
comment30.target=void\ solveVerySimpleMazeClockWise()
comment30.text=\r\n\ Mimi\ will\ solve\ a\ simple\ maze.\ She\ will\ walk\ clockwise\r\n
comment31.params=
comment31.target=void\ solveVerySimpleMazeAntiClockWise()
comment31.text=\r\n\ Mimi\ will\ solve\ a\ simple\ maze.\ She\ will\ walk\ anticlockwise\r\n
comment32.params=direction
comment32.target=void\ faceDirection(int)
comment32.text=\r\n\ Mimi\ will\ face\ the\ given\ direction\r\n
comment33.params=xCord
comment33.target=void\ alignToXCord(int)
comment33.text=\r\n\ Mimi\ will\ face\ the\ x\ axis\r\n
comment34.params=yCord
comment34.target=void\ alignToYCord(int)
comment34.text=\r\n\ Mimi\ will\ face\ the\ y\ axis\r\n
comment35.params=xCord\ yCord
comment35.target=void\ goToLocation(int,\ int)
comment35.text=\r\n\ Mimi\ will\ walk\ to\ the\ given\ location\r\n
comment36.params=xCord\ yCord
comment36.target=boolean\ validCordintes(int,\ int)
comment36.text=\r\n\ Mimi\ will\ check\ if\ the\ cordinates\ exist\r\n
comment37.params=
comment37.target=int\ countEggsInRow()
comment37.text=\r\n\ Mimi\ will\ count\ eggs\ in\ a\ row\r\n
comment38.params=dir
comment38.target=int\ getRowLenght(int)
comment38.text=\r\n\ Mimi\ will\ get\ the\ lenght\ of\ the\ row\r\n
comment39.params=amount
comment39.target=void\ layTrailOfEgg(int)
comment39.text=\r\n\ Mimi\ will\ lay\ a\ trail\ of\ egg.\ The\ amount\ that\ she\ lays\ is\ given\ by\ the\ user\r\n
comment4.params=
comment4.target=boolean\ canMove()
comment4.text=\r\n\ Test\ if\ Dodo\ can\ move\ forward,\ (there\ are\ no\ obstructions\r\n\ \ \ \ or\ end\ of\ world\ in\ the\ cell\ in\ front\ of\ her).\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world\r\n\ <p>\ Final\:\ \ \ Same\ as\ initial\ situation\r\n\ \r\n\ @return\ boolean\ true\ if\ Dodo\ can\ move\ (no\ obstructions\ ahead)\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ if\ Dodo\ can't\ move\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (an\ obstruction\ or\ end\ of\ world\ ahead)\r\n
comment40.params=
comment40.target=void\ moveOneStepDown()
comment40.text=\r\n\ Mimi\ move\ one\ step\ down\r\n
comment41.params=
comment41.target=int\ getAmountEggInMap()
comment41.text=\r\n\ Mimi\ will\ count\ the\ total\ eggs\ in\ the\ world\r\n
comment42.params=
comment42.target=int\ getMostEggInRow()
comment42.text=\r\n\ Mimi\ will\ find\ the\ most\ eggs\ in\ a\ row\r\n
comment43.params=
comment43.target=double\ getAverageEggOfRow()
comment43.text=\r\n\ Mimi\ will\ find\ the\ average\ eggs\ in\ that\ row\r\n
comment44.params=amount
comment44.target=void\ layEggTrailAndReturn(int)
comment44.text=\r\n\ Mimi\ will\ lay\ eggs\ in\ a\ row\ and\ return\ to\ her\ original\ postion.\ The\ amount\ of\ eggs\ she\ lays\ is\ given\ by\ the\ user\r\n
comment45.params=height
comment45.target=void\ makeMonument(int)
comment45.text=\r\n\ Mimi\ will\ make\ a\ stair\ of\ eggs\ the\ height\ is\ given\ by\ the\ user\r\n
comment46.params=height
comment46.target=void\ makeStrongMonument(int)
comment46.text=\r\n\ Mimi\ will\ make\ a\ stair\ of\ eggs\ with\ a\ stronger\ foundation\ the\ height\ is\ given\ by\ the\ user\r\n
comment47.params=height
comment47.target=void\ makePyramid(int)
comment47.text=\r\n\ Mimi\ will\ make\ a\ pyramid\ of\ eggs\ the\ height\ is\ given\ by\ the\ user\r\n
comment48.params=dir
comment48.target=boolean\ checkEvenEgg(int)
comment48.text=\r\n\ Check\ if\ the\ Row\ is\ a\ even\ number\r\n\ the\ input\ dir\ is\ the\ direction\ that\ mimi\ should\ face\r\n\ \r\n
comment49.params=
comment49.target=void\ paritOneMistake()
comment49.text=\r\nThis\ function\ will\ parit\ only\ one\ mistake\ in\ a\ map\r\n\ \r\n\ \r\n
comment5.params=
comment5.target=int\ nearestEggDistance()
comment5.text=\r\n\ This\ function\ gets\ the\ distance\ of\ the\ nearest\ egg\r\n
comment50.params=
comment50.target=int\ faceRandomDirection()
comment51.params=step
comment51.target=void\ moveRandomly(int)
comment6.params=
comment6.target=void\ pickUpMostEgg()
comment7.params=
comment7.target=void\ hatchEgg()
comment7.text=\r\n\ Hatches\ the\ egg\ in\ the\ current\ cell\ by\ removing\r\n\ the\ egg\ from\ the\ cell.\r\n\ Gives\ an\ error\ message\ if\ there\ is\ no\ egg\r\n\ \r\n\ <p>\ Initial\:\ Dodo\ is\ somewhere\ in\ the\ world.\ There\ is\ an\ egg\ in\ Dodo's\ cell.\r\n\ <p>\ Final\:\ Dodo\ is\ in\ the\ same\ cell.\ The\ egg\ has\ been\ removed\ (hatched).\ \ \ \ \ \r\n
comment8.params=
comment8.target=int\ getEggScore()
comment8.text=\r\n\ This\ function\ gets\ the\ total\ score\ that\ is\ collected\r\n
comment9.params=
comment9.target=int\ getNrOfEggsHatched()
comment9.text=\r\n\ Returns\ the\ number\ of\ eggs\ Dodo\ has\ hatched\ so\ far.\r\n\ \r\n\ @return\ int\ number\ of\ eggs\ hatched\ by\ Dodo\r\n
numComments=52
